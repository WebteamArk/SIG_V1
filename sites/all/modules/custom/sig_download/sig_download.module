<?php

/**
 * @file sig_download.module
 * @author Jacek Szmit
 */
define('SIG_DOWNLOAD_COOKIE', 'sig_download_registered');
define('SIG_DOWNLOAD_EMAIL_ENTITY', 'email_collect');
define('SIG_DOWNLOAD_EMAIL_BUNDLE', 'email_collect_downloadcenter');

/**
 * Implements hook_block_info().
 */
function sig_download_block_info() {
  $blocks = array();

  $blocks['sid_downloadcenter'] = array(
      'info' => t('SIG downloadcenter'),
      'cache' => DRUPAL_NO_CACHE,
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function sig_download_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'sid_downloadcenter':
      $block['subject'] = t('Sig downloadcenter');
      if (!isset($_COOKIE[SIG_DOWNLOAD_COOKIE])) {
        $block['content'] = drupal_get_form('sig_downloadcenter_email_form');
      }
      else {
        $block['content'] = drupal_get_form('sig_downloadcenter_list_form');
      }
      break;
  }
  return $block;
}

/**
 * sig_downloadcenter_email_form CALLBACK
 */
function sig_downloadcenter_email_form($form, &$form_state) {
  $form['sig'] = array(
    '#type' => 'container',
  );
  $form['sig']['info'] = array(
    '#markup' => t('Enter Your email address to download files.'),
    '#prefix' => '<div class="sig-form-info form-item">',
    '#suffix' => '</div>',
  );
  $form['sig']['company'] = array(
    '#type' => 'textfield',
    '#required' => true,
    '#attributes' =>array('placeholder' => t('Company name*'))
  );
  $form['sig']['firstname'] = array(
    '#type' => 'textfield',
    '#required' => true,
    '#attributes' =>array('placeholder' => t('Firstname*'))
  );
  $form['sig']['lastname'] = array(
    '#type' => 'textfield',
    '#required' => true,
    '#attributes' =>array('placeholder' => t('Lastname*'))
  );
  $form['sig']['address'] = array(
    '#type' => 'textfield',
    '#required' => true,
    '#attributes' =>array('placeholder' => t('Address*'))
  );
  $form['sig']['country'] = array(
    '#type' => 'select',
    '#options' => array(
      '' => 'Country*',
      'en' => 'item1',
      'pl' => 'item2',
    ),
    '#default_value' => '',
    '#required' => true,
    '#attributes' =>array('placeholder' => t('Country*')),
    '#prefix' => '<div class="select-wrapper form-item">',
    '#suffix' => '</div>',
  );
  $form['sig']['telephone'] = array(
    '#type' => 'textfield',
    '#required' => true,
    '#attributes' =>array('placeholder' => t('Telephone*'))
  );
  $form['sig']['email'] = array(
    '#type' => 'textfield',
    '#required' => true,
    '#element_validate' => array('_sig_download_email_validate'),
    '#attributes' =>array('placeholder' => t('Email*'))
  );
  $form['sig']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
    '#prefix' => '<div class="form-actions"><div class="extra_div">',
    '#suffix' => '</div></div>',
  );

  return $form;
}

/**
 * email element_validate CALLBACK
 */
function _sig_download_email_validate($element, &$form_state, $form) {
  $value = $element['#value'];
  if (!valid_email_address($value)) {
    form_error($element, t('Please enter a valid email address.'));
  }
}

/**
 * sig_downloadcenter_email_form submit CALLBACK
 */
function sig_downloadcenter_email_form_submit($form, &$form_state) {
  global $cookie_domain;
  
  if (!isset($_COOKIE[SIG_DOWNLOAD_COOKIE])) {
    setcookie(SIG_DOWNLOAD_COOKIE,1,time() + (86400 * 365), '/', $cookie_domain);
  }
  $company = $form_state['values']['company'];
  $firstname = $form_state['values']['firstname'];
  $lastname = $form_state['values']['lastname'];
  $address = $form_state['values']['address'];
  $country = $form_state['values']['country'];
  $telephone = $form_state['values']['telephone'];
  $email = $form_state['values']['email'];
  if(_sig_download_save_email_entity($company, $firstname, $lastname, $address, $telephone, $email)) {
    _sig_messages_mail_send($email);
  }
}

/**
 * sig_downloadcenter_list_form CALLBACK
 */
function sig_downloadcenter_list_form($form, &$form_state) {
  $node = menu_get_object();
  
  $files_info = array();
  
  foreach ($node->field_paragraph_files[LANGUAGE_NONE] as $elem) {
    $entity = entity_load_single('paragraphs_item', $elem['value']);
    $files_info[] = array(
      'title' => $entity->field_downloadcenter_title[LANGUAGE_NONE][0]['value'],
      'desc' => $entity->field_downloadcenter_description[LANGUAGE_NONE][0]['value'],
      'file' => $entity->field_downloadcenter_file[LANGUAGE_NONE][0]['fid'],
    );
  }
  
  $form['sig'] = array(
    '#type' => 'container',
  );
  if(!empty($form_state['storage']['sig_selected_files'])) {
    $thanks = t('Thank you for your request, download will start automatically.');
    $form['sig']['thanks'] = array(
      '#markup' => '<div class="sig-thanks">'. $thanks . '</div>'
    );
    
    foreach ($form_state['storage']['sig_selected_files'] as $fid => $selected) {
      if($selected > 0) {
        $file = file_load($fid);
        $form['sig']['file_'.$fid] = array(
          '#markup' => theme('file_link', array('file' => $file)),
          '#prefix' => '<div class="sig-file-auto">',
          '#suffix' => '</div>',
        );
      }
    }
    $form['#attached']['js'] = array(
      drupal_get_path('module', 'sig_download') . '/sig_download.js',
    );
    
    return $form;
  }
  
  if (empty($files_info)) {
    $form['sig']['info'] = array(
      '#markup' => t('No files to download.'),
      '#prefix' => '<div class="sig-form-info">',
      '#suffix' => '</div>',
    );
  } else {
    $options = array();

    foreach ($files_info as $item) {
      $options[$item['file']] = '<div class="sig-option-info"><p>' . $item['title'] . '</p>' . $item['desc'] . '</div>';
    }

    $form['sig']['files'] = array(
      '#type' => 'checkboxes',
      '#options' => $options,
      '#required' => true,
    );
    
    $form['sig']['submit'] = array(
        '#type' => 'submit',
        '#value' => t('Download'),
        '#prefix' => '<div class="form-actions"><div class="extra_div">',
        '#suffix' => '</div></div>',
    );
  }

  return $form;
}

/**
 * sig_downloadcenter_list_form submit CALLBACK
 */
function sig_downloadcenter_list_form_submit($form, &$form_state) {
  $form_state['storage']['sig_selected_files'] = $form_state['values']['files'];
  $form_state["rebuild"] = true;
}

/**
 * Save email entity if not exist.
 * @param string $email
 * @return boolean
 */
function _sig_download_save_email_entity($company, $firstname, $lastname, $address, $telephone, $email) {
  if(_sig_download_check_email_entity_exists($email)) {
    return false;
  }

  $email_collect_values = array(
      'type' => SIG_DOWNLOAD_EMAIL_BUNDLE,
      'title' => $email . ' ' . $company,
      'field_ecd_company_name' => $company,
      'field_ecd_firstname' => $firstname,
      'field_ecd_lastname' => $lastname,
      'field_ecd_address' => $address,
      'field_ecd_telephone' => $telephone,
      'field_ec_email' => $email,
  );

  $email_collect = entity_create(SIG_DOWNLOAD_EMAIL_ENTITY, $email_collect_values);
  $email_collect->save();

  return true;
}

/**
 * Check if email exists already.
 * @param string $email
 * @return boolean
 */
function _sig_download_check_email_entity_exists($email) {
  $query = new EntityFieldQuery();
  $entities = $query->entityCondition('entity_type', SIG_DOWNLOAD_EMAIL_ENTITY)
  ->propertyCondition('type', SIG_DOWNLOAD_EMAIL_BUNDLE)
  ->fieldCondition('field_ecd_email', 'value', $email, '=')
  ->range(0,1)
  ->execute();

  return (!empty($entities[SIG_DOWNLOAD_EMAIL_ENTITY])) ? true : false;
}
